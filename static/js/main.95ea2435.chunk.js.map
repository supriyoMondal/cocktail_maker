{"version":3,"sources":["assets/cocktail.png","assets/liquor.png","pages/Home.js","pages/CocktailDetails.js","components/Header.js","App.js","serviceWorker.js","reducers/cocktaiReducer.js","reducers/index.js","store.js","index.js"],"names":["module","exports","Home","CocktailDetails","variant","visible","x","opacity","transition","duration","ease","hidden","Header","useState","drawerVisibility","setDrawerVisibility","className","onClick","style","fontSize","color","cursor","paddingLeft","src","Logo","alt","marginLeft","padding","div","variants","animate","initial","exit","position","top","right","Liquor","App","basename","process","component","path","exact","Boolean","window","location","hostname","match","initialState","alcoholic","combineReducers","cocktails","state","action","type","payload","middleware","thunk","store","createStore","rootReducers","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"kGAAAA,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,4JCU5BC,EARF,WACT,OACI,sCCMOC,EARS,WACpB,OACI,iD,qGCIFC,EAAU,CACZC,QAAS,CACLC,EAAG,EACHC,QAAS,EACTC,WAAY,CACRC,SAAU,GACVC,KAAM,YAGdC,OAAQ,CACJL,EAAG,SACHC,QAAS,IA4DFK,EAxDA,WAAO,IAAD,EAC+BC,oBAAS,GADxC,mBACVC,EADU,KACQC,EADR,KAEjB,OACI,kBAAC,WAAD,KACI,yBAAKC,UAAU,UACX,yBACIC,QAAS,kBAAMF,GAAqBD,KAEpC,kBAAC,IAAD,CACIE,UAAU,OAAOE,MAAO,CAAEC,SAAU,GAAIC,MAAO,OAAQC,OAAQ,UAAWC,YAAa,MAE/F,yBAAKN,UAAU,gBAEX,8CACA,yBAAKO,IAAKC,IAAMC,IAAI,cAExB,kBAAC,IAAD,CAAYT,UAAU,OAAOE,MAAO,CAAEC,SAAU,GAAIC,MAAO,OAAQM,WAAY,OAAQC,QAAS,MAGpG,kBAAC,IAAD,KAEKb,GACG,kBAAC,IAAOc,IAAR,CACIZ,UAAU,gBACVa,SAAUzB,EACV0B,QAAQ,UACRC,QAAQ,SACRC,KAAK,UAEL,yBAAKhB,UAAU,UACX,yBACIC,QAAS,kBAAMF,GAAoB,IACnCG,MAAO,CACHe,SAAU,WAAYC,IAAK,EAAGC,MAAO,IAEzC,kBAAC,IAAD,OAEJ,yBAAKnB,UAAU,iBACX,yBAAKA,UAAU,iBACX,yBAAKO,IAAKa,IAAQX,IAAI,cAE1B,oDC9CjBY,MAZf,WACE,OACE,kBAAC,IAAD,CAAQC,SAAUC,mBAChB,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,UAAWtC,EAAMuC,KAAK,IAAIC,OAAK,IACtC,kBAAC,IAAD,CAAOF,UAAWrC,EAAiBsC,KAAK,eAAeC,OAAK,OCAhDC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,4BClBAC,EAAe,CACjBC,UAAW,CAAC,YAAa,gBAAiB,qBCE/BC,cAAgB,CAC3BC,UDAW,WAAyC,IAA/BC,EAA8B,uDAAtBJ,EAAcK,EAAQ,uCAC3BA,EAAlBC,KAAkBD,EAAZE,QAKJ,OAAOH,KELbI,EAAa,CAACC,KAILC,EAFDC,YAAYC,EAHL,GAGiCC,IAAe,WAAf,EAAmBL,ICgBzEM,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUN,MAAOA,GACf,kBAAC,EAAD,QAIJO,SAASC,eAAe,SJqGpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.95ea2435.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cocktail.a928df94.png\";","module.exports = __webpack_public_path__ + \"static/media/liquor.034d0b6e.png\";","import React from 'react'\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div>\r\n            home\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\n\r\nconst CocktailDetails = () => {\r\n    return (\r\n        <div>\r\n            CocktailDetails\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CocktailDetails\r\n","import React, { useState, Fragment } from 'react'\r\nimport Logo from '../assets/cocktail.png'\r\nimport Liquor from '../assets/liquor.png'\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport { motion, AnimatePresence } from 'framer-motion'\r\n\r\nconst variant = {\r\n    visible: {\r\n        x: 0,\r\n        opacity: 1,\r\n        transition: {\r\n            duration: .4,\r\n            ease: 'easeOut'\r\n        }\r\n    },\r\n    hidden: {\r\n        x: '-100vw',\r\n        opacity: 0\r\n    }\r\n}\r\n\r\nconst Header = () => {\r\n    const [drawerVisibility, setDrawerVisibility] = useState(false);\r\n    return (\r\n        <Fragment>\r\n            <div className=\"header\">\r\n                <div\r\n                    onClick={() => setDrawerVisibility(!drawerVisibility)}\r\n                >\r\n                    <MenuIcon\r\n                        className=\"icon\" style={{ fontSize: 30, color: '#fff', cursor: 'pointer', paddingLeft: 8 }} />\r\n                </div>\r\n                <div className=\"main-heading\">\r\n\r\n                    <h1>Cocktail Maker</h1>\r\n                    <img src={Logo} alt=\"Cocktail\" />\r\n                </div>\r\n                <SearchIcon className=\"icon\" style={{ fontSize: 25, color: '#fff', marginLeft: 'auto', padding: 5 }} />\r\n            </div>\r\n\r\n            <AnimatePresence\r\n            >\r\n                {drawerVisibility &&\r\n                    <motion.div\r\n                        className=\"drawerOverlay\"\r\n                        variants={variant}\r\n                        animate='visible'\r\n                        initial='hidden'\r\n                        exit='hidden'\r\n                    >\r\n                        <div className=\"drawer\">\r\n                            <div\r\n                                onClick={() => setDrawerVisibility(false)}\r\n                                style={{\r\n                                    position: 'absolute', top: 3, right: 3\r\n                                }}>\r\n                                <CancelIcon />\r\n                            </div>\r\n                            <div className=\"drawerHeading\">\r\n                                <div className=\"img-container\">\r\n                                    <img src={Liquor} alt=\"Cocktail\" />\r\n                                </div>\r\n                                <h2>Cocktail Maker</h2>\r\n                            </div>\r\n\r\n\r\n                            {/* Close Icon at bottom */}\r\n                        </div>\r\n\r\n                    </motion.div>\r\n                }\r\n            </AnimatePresence>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport Home from './pages/Home';\nimport CocktailDetails from './pages/CocktailDetails';\nimport Header from './components/Header';\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Header />\n      <Switch>\n        <Route component={Home} path=\"/\" exact />\n        <Route component={CocktailDetails} path=\"/details/:id\" exact />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\r\n    alcoholic: ['Alcoholic', 'Non alcoholic', 'Optional alcohol']\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    let { type, payload } = action;\r\n    switch (type) {\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport cocktailReducer from './cocktaiReducer';\r\n\r\nexport default combineReducers({\r\n    cocktails: cocktailReducer\r\n})","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducers from './reducers';\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(rootReducers, initialState, applyMiddleware(...middleware));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\n//image url\n// https://www.thecocktaildb.com/images/ingredients/Light%20rum.png\n// drink type https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list\n\n//glass type\n// https://www.thecocktaildb.com/api/json/v1/1/list.php?g=list\n\n//drinks https://www.thecocktaildb.com/api/json/v1/1/list.php?i=list\n\n//alcoholic types https://www.thecocktaildb.com/api/json/v1/1/list.php?a=list\n\n//all cocktails https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=Gin\n\n//details https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=17223\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}